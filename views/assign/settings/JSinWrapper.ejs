<script>
$(document).ready(function() {

	$('#monitorchanges input, #monitorchanges select, #monitorchanges textarea').change(function (){
		//alert(0);
		$(this).closest('.settings-box').find('.settings-status').html('Save changes below <span class="showTooltip tooltip" title="Confirm changes for Test settings with the \'Save changes\' button at the bottom of this page.">Tip</span>');
	});

	$('.editSettingsSubmitCheck').click( function(){

		var user_id_list = [];
		for (var i = 0; i < 4; i++) {
			if ($("[name=email_id_" + i+"]").length > 0 ) {
				var user_id = $("[name=email_id_" + i+"]").val();
				if (user_id_list.length > 0) {
					for (var j = 0; j < user_id_list.length; j++) {
						if (user_id == user_id_list[j]) {
							alert("In the Instructor Email Results setting, you have selected to have Test results emailed to the same email address two or more times. " +
								"Edit your settings above to select each email address once only");
							return false;
						}
					}
				}
				user_id_list.push(user_id);
			}
		}

		// Email user send check
		if($('#email_student').val() === '1') {

			
			if ($('#email_student_from').val().replace(/ /g, "").length==0){
				alert('Please add a Name in the Email \'From\' field in the Test takers send email settings.');
				return false;
			}
			if ($('#email_student_subject').val().replace(/ /g, "").length==0){
				alert('Please add a subject to the Email \'Subject\' field in the Test takers send email settings.');
				return false;
			}

			if( !$('#email_student_send_manual').is(':checked') && !$('#email_student_send_auto').is(':checked') ){

				alert('Please select the send method for user emails.');
				return false;

			}

			if( $('#email_student_send_auto').is(':checked') ) {

				// check that the auto settings are selected.
				if( !$('#email_student_send_type_auto_on_completion_to_email_queue').is(':checked') && !$('#email_student_send_type_auto_date').is(':checked') ) {

					alert('Please select the Test takers email auto send type.');
					return false;

				} else if( $('#email_student_send_type_auto_date').is(':checked') && $('#email_student_send_date_datepickerfrom').datepicker("getDate") === null ) {

					alert('Please choose a date for sending Test takers emails.');
					return false;

				}

			}

		}


		if ( $('input[name="settings\\[show_from\\]"]:checked').val() == undefined && ($("#datepickerfrom").val().replace(/ /g, "").length ==0 && $("#datepickeruntil").val().replace(/ /g, "").length ==0) ){
			alert('Please choose the Test Availability.');
			return false;

		} else if ( isNaN( $('input[name="settings\\[time_limit\\]"]').val() ) ){
			alert('Time limit must be a numeric digit.');
			return false;

		} else if (  $("#datepickerfrom").val().replace(/ /g, "").length > 0 && $("#datepickeruntil").val().replace(/ /g, "").length==0 ) {
			alert('Please choose the end Test Availability date or clear both date fields');
			return false;

		} else if  ( $("#datepickerfrom").val().replace(/ /g, "").length ==0 && $("#datepickeruntil").val().replace(/ /g, "").length>0 ){
			alert('Please choose the start Test Availability date or clear both date fields');
			return false;

		} else if ( !checkHttpLink($('input[name="settings\\[pass_url\\]"]').val()) || !checkHttpLink($('input[name="settings\\[fail_url\\]"]').val())){
			alert('Return Links must start with http:// or https://');
			return false;

		} else if (!$('#cert_0').is(':checked') && $('#ct_1').is(':checked') && !passmark_is_set() ) {
			alert('You have selected to only allow your certificate to show when the Test is passed, however, you have not set a pass mark.\n\nCorrect this and try again.');
			return false;
				} else {
			var assign_submit_link = $(this);
			$(this).hide().after('<img src="/img3/icon_loading_circleV3.gif" alt="Loading" class="loadingGif" />');

			IEHack_ShowBbcodeBeforeSubmit();

			$(this).closest("form").submit();
			$('.loadingGif').slideUp(10000);
			setTimeout(function(){
				assign_submit_link.show().after('<p>Page did not submit, please wait another few seconds just in case then try again.</p>');
			},10500);

			return false;
		}

	});

	// START: Instructor email settings
	$(document).on('click', '#er_1', function(){
		$('#instructor_send_message').text('NO').removeClass('green');
	});

	$(document).on('click', '#er_2, #er_3, #er_4', function(){
		$('#instructor_send_message').text('YES').addClass('green');
	});
	// END: Instructor email settings



	// START: Email Student
	$("#email_student_send_date_datepickerfrom").datepicker(  { minDate:'NOW', maxDate: '+3M' } );

	// Display correct send type sections
	if( $('#email_student_send_auto').is(':checked') ) {
		$('#email_student_send_auto_options_section').show();
	}

	if( $('#email_student_send_type_auto_date').is(':checked') ){
		$('#email_student_send_date_section').slideDown();
	}

	$('#email_student_gq').change(function (){
		if ( $(this).is(':checked') == false){
			$('#email_student_sca2_, #email_student_daqin_').removeAttr('checked');
		}
	});

	$('#email_student_sca2_, #email_student_daqin_').change(function (){
		$('#email_student_gq').prop("checked", true);
	});

	$('.email_student_checkbox').on('change', function(){

		var checked = checkedEmailStudentsOn();


		if(checked){
			$('#email_student_results_message').text('YES').addClass('green');
			$('#email_student').val('1');

			// Enable the text inputs
			$('#email_student_from, #email_student_subject, #email_student_send_date_datepickerfrom').attr('disabled', false);
			$('#send_email_details_fields').slideDown();
			$('#turnoff_emailstudents').show();
			$('#from_external_email').show();
		} else {
			disableEmailStudentResultsForms();

		}

	});
	$(document).on('click', '#turnoff_emailstudents_link', function(e){
		e.preventDefault();
		disableEmailStudentResultsForms();
	});

	function checkedEmailStudentsOn(){


		var email_student_checkbox_id_array = ['email_student_ssp',
			'email_student_ssp2',
			'email_student_stf',
			'email_student_gq',
			'email_student_sca2_',
			'email_student_daqin_',
			'email_student_vr_8'];

		for(var i = 0; i < email_student_checkbox_id_array.length; i++){
			if(document.getElementById(email_student_checkbox_id_array[i]).checked){
				return true;
			}
		}

		return false;
	}

	function disableEmailStudentResultsForms(){
		$('#email_student_results_message').text('NO').removeClass('green');
		$('#email_student').val('0');
		$('#email_student_ssp,#email_student_ssp2,#email_student_stf,#email_student_gq,#email_student_sca2_,#email_student_daqin_,#email_student_vr_8').prop('checked', false);

		// Disable the text inputs. Im not clearing the content just in case the admin did not want to disable Test taker emails.
		// The values will not be saved.
		$('#email_student_from, #email_student_subject, #email_student_send_date_datepickerfrom').attr('disabled', true);
		$('#send_email_details_fields').slideUp();
		$('#turnoff_emailstudents').hide();
		$('#from_external_email').hide();
	}


	// Send email options (manual or auto)

	$('#email_student_send_manual, #email_student_send_auto').on('change', function(){

			if( $(this).val() === 'manual' ){

				// Hide sections
				$('#email_student_send_auto_options_section, #email_student_send_date_section').slideUp();

				// Set send auto section radio buttons to unchecked
				//$('#email_student_send_type_auto_on_completion_to_email_queue').removeAttr('checked');

				// Set date to null
				$("#email_student_send_date_datepickerfrom").datepicker('setDate', null);
				$('#email_student_send_type_auto_date').removeAttr('checked');

			} else {

				$('#email_student_send_auto_options_section').slideDown();

			}

	});

	$('#email_student_send_type_auto_on_completion_to_email_queue, #email_student_send_type_auto_date').on('change', function(){

		if( $(this).val() === 'auto' ){

			$("#email_student_send_date_datepickerfrom").datepicker('setDate', null);
			$('#email_student_send_date_section').slideUp();

		} else {
			$('#email_student_send_date_section').slideDown();
		}

	});

	// END: Email Student


    if ( $('input[name="settings\\[show_from\\]"]:checked').val() == 1 ){
        $('#resultandresume').hide();
    }
	
	// input boxes uncheck
	if($('input[id="si_2"]').is(':checked')){
		$('input[id="si_22"]').attr('disabled', true)
	}
	$('input[id="si_2"]').change(function (){
		if ($('input[id="si_2"]').prop('checked') ) {
			$('input[id="si_22"]').attr('disabled', true)
		}else{
			$('input[id="si_22"]').attr('disabled', false)
		}
	})
	if($('input[id="show_results_when_unavailable"]').is(':checked')){
		$('input[id="srwu"]').attr('disabled', true)
	}
	$('input[id="show_results_when_unavailable"]').change(function (){
		if ($('input[id="show_results_when_unavailable"]').prop('checked') ) {
			$('input[id="srwu"]').attr('disabled', true)
		}else{
			$('input[id="srwu"]').attr('disabled', false)
		}
	})
	if($('input[id="can_resume_when_unavailable"]').is(':checked')){
		$('input[id="crwu"]').attr('disabled', true)
	}
	$('input[id="can_resume_when_unavailable"]').change(function (){
		if ($('input[id="can_resume_when_unavailable"]').prop('checked') ) {
			$('input[id="crwu"]').attr('disabled', true)
		}else{
			$('input[id="crwu"]').attr('disabled', false)
		}
	})
	if($('input[id="sfl_2"]').is(':checked')){
		$('input[id="sfl_22"]').attr('disabled', true)
	}
	$('input[id="sfl_2"]').change(function (){
		if ($('input[id="sfl_2"]').prop('checked') ) {
			$('input[id="sfl_22"]').attr('disabled', true)
		}else{
			$('input[id="sfl_22"]').attr('disabled', false)
		}
	})
	if($('input[id="sqpdt"]').is(':checked')){
		$('input[id="sqpdt2"]').attr('disabled', true)
	}
	$('input[id="sqpdt"]').change(function (){
		if ($('input[id="sqpdt"]').prop('checked') ) {
			$('input[id="sqpdt2"]').attr('disabled', true)
		}else{
			$('input[id="sqpdt2"]').attr('disabled', false)
		}
	})
	if($('input[id="sqcdt"]').is(':checked')){
		$('input[id="sqcdt2"]').attr('disabled', true)
	}
	$('input[id="sqcdt"]').change(function (){
		if ($('input[id="sqcdt"]').prop('checked') ) {
			$('input[id="sqcdt2"]').attr('disabled', true)
		}else{
			$('input[id="sqcdt2"]').attr('disabled', false)
		}
	})
	if($('input[id="rq_2"]').is(':checked')){
		$('input[id="rq_22"]').attr('disabled', true)
	}
	$('input[id="rq_2"]').change(function (){
		if ($('input[id="rq_2"]').prop('checked') ) {
			$('input[id="rq_22"]').attr('disabled', true)
		}else{
			$('input[id="rq_22"]').attr('disabled', false)
		}
	})
	//\\ ||||||||||||||||||||| //\\
	if($('input[id="pp_2"]').is(':checked')){
		$('input[id="pp_22"]').attr('disabled', true)
	}
	$('input[id="pp_2"]').change(function (){
	if ($('input[id="pp_2"]').prop('checked') ) {
			$('input[id="pp_22"]').attr('disabled', true)
		}else{
			$('input[id="pp_22"]').attr('disabled', false)
		}
	})
	if($('input[id="copytext"]').is(':checked')){
		$('input[id="copytext2"]').attr('disabled', true)
	}
	$('input[id="copytext"]').change(function (){
	if ($('input[id="copytext"]').prop('checked') ) {
			$('input[id="copytext2"]').attr('disabled', true)
		}else{
			$('input[id="copytext2"]').attr('disabled', false)
		}
	})
	if($('input[id="pastetext"]').is(':checked')){
		$('input[id="pastetext2"]').attr('disabled', true)
	}
	$('input[id="pastetext"]').change(function (){
	if ($('input[id="pastetext"]').prop('checked') ) {
			$('input[id="pastetext2"]').attr('disabled', true)
		}else{
			$('input[id="pastetext2"]').attr('disabled', false)
		}
	})
	//gq	sca2_	
	if($('input[id="ssp"]').is(':checked')){
		$('input[id="ssp12"]').attr('disabled', true)
	}
	$('input[id="ssp"]').change(function (){
	if ($('input[id="ssp"]').prop('checked') ) {
			$('input[id="ssp12"]').attr('disabled', true)
		}else{
			$('input[id="ssp12"]').attr('disabled', false)
		}
	})
		if($('input[id="ssp2"]').is(':checked')){
		$('input[id="ssp22"]').attr('disabled', true)
	}
	$('input[id="ssp2"]').change(function (){
	if ($('input[id="ssp2"]').prop('checked') ) {
			$('input[id="ssp22"]').attr('disabled', true)
		}else{
			$('input[id="ssp22"]').attr('disabled', false)
		}
	})
		if($('input[id="stf"]').is(':checked')){
		$('input[id="stf2"]').attr('disabled', true)
	}
	$('input[id="stf"]').change(function (){
	if ($('input[id="stf"]').prop('checked') ) {
			$('input[id="stf2"]').attr('disabled', true)
		}else{
			$('input[id="stf2"]').attr('disabled', false)
		}
	})
		if($('input[id="gq"]').is(':checked')){
		$('input[id="gq2"]').attr('disabled', true)
	}
	$('input[id="gq"]').change(function (){
	if ($('input[id="gq"]').prop('checked') ) {
			$('input[id="gq2"]').attr('disabled', true)
		}else{
			$('input[id="gq2"]').attr('disabled', false)
		}
	})
	if($('input[id="sca2_"]').is(':checked')){
		$('input[id="sca2_2"]').attr('disabled', true)
	}
	$('input[id="sca2_"]').change(function (){
	if ($('input[id="sca2_"]').prop('checked') ) {
			$('input[id="sca2_2"]').attr('disabled', true)
			$('input[id="gq2"]').attr('disabled', true)
		}else{
			$('input[id="sca2_2"]').attr('disabled', false)
			// $('input[id="gq2"]').attr('disabled', false)c
		}
	})
	if($('input[id="daqin_"]').is(':checked')){
		$('input[id="daqin_2"]').attr('disabled', true)
	}
	$('input[id="daqin_"]').change(function (){
	if ($('input[id="daqin_"]').prop('checked') ) {
			$('input[id="daqin_2"]').attr('disabled', true)
			$('input[id="gq2"]').attr('disabled', true)
		}else{
			$('input[id="daqin_2"]').attr('disabled', false)
			// $('input[id="gq2"]').attr('disabled', false)
		}
	})
	
	
	$("#datepickerfrom").datepicker({
      changeMonth: true,
      changeYear: true, dateFormat:"yy-mm-dd"
    });
	$("#datepickeruntil").datepicker({
      changeMonth: true,
      changeYear: true, dateFormat:"yy-mm-dd"
    });
	$('[id^="datepicker"]').change(function (){
		$('[id^="showfrom"]').prop('checked',false);
		$('#resultandresume').show();
	});
	$('[id^="showfrom"]').click( function (){
		/* Clear datepicker settings when not using */
		$('[id^="datepicker"]').val('');
        if ($('input[name="settings\\[show_from\\]"]:checked').val() == 1) {
			$( "#resultandresume" ).slideUp();
        }
        if ($('input[name="settings\\[show_from\\]"]:checked').val() == 0) {
            $('#resultandresume').slideDown();
        }
	});
	$('#showfromon').click( function (){
		/* Clear settings when always available */
		$('#show_results_when_unavailable').prop("checked", false);
		$('#can_resume_when_unavailable').prop("checked", false);
	});

	$("#datepickeruntil").click(function() {
		if ($("#datepickerfrom").val().replace(/ /g, "").length > 0 && $("#datepickeruntil").val().replace(/ /g, "").length == 0){
			$("#datepickeruntil").datepicker( "setDate" , $("#datepickerfrom").val());
		}
	});
	$('#one_attempt').click( function (){
		$("#num_attempts_count").val('');
	});
	$('#unlimited_attampts').click(function (){
		$("#num_attempts_count").val('');
	});
	$('#num_attempts_count').click( function (){
		$("#num_attempts").prop('checked', true);
	});
	$('#num_attempts').click( function (){
		$("#num_attempts_count").focus();
	});
	$("#num_attempts_count").blur( function (){
		if ( $("#num_attempts_count").val().replace(/ /g, "").length && (isNaN($("#num_attempts_count").val()) || $("#num_attempts_count").val() <= 1)  ){
			alert('You can only set as 2 or higher.\n\nPlease try again.');
			$("#num_attempts_count").val('');
			$("#one_attempt").prop('checked',true);
		}
	});

	/* Charge Tests */
	$('#do_charge_selector').change(function (){
		if ( $(this).is(':checked') == false ){
			$('#do_charge_div').hide();
			$('#charge_messsage_top').show();
		} else {
			$('#do_charge_div').show();
			$('#charge_messsage_top').hide();
		}
	});
	/* Give receipt */
	$('#give_receipt_id').change(function (){
		if ( $(this).is(':checked') == false ){
			$('#give_receipt_div').hide();
		} else {
			$('#give_receipt_div').show();
		}
	});

	/* completion review */
	$('#q_').change(function (){
		if ( $(this).is(':checked') == false){
			$('#qf_').removeAttr('checked');
			$('#qio_').removeAttr('checked');
			$('#qca_').removeAttr('checked');
		}
	});
	$('#qf_').change(function (){

		$('#q_').prop("checked", true);
	});
	$('#qio_').change(function (){
		$('#q_').prop("checked", true);
	});
	$('#qca_').change(function (){
		$('#q_').prop("checked", true);
	});

	/* instant review */
	$('#sfq_').change(function (){
		if ( $(this).is(':checked') == false){
			$('#sfqca_, #sfpdt_').removeAttr('checked');
		}
	});
	$('#sfqca_, #sfpdt_').change(function (){
		$('#sfq_').prop("checked", true);
	});

	/* mandatory answers */
	$('#ma_2').change(function (){
		if ( $(this).is(':checked') == false){
			$('#cc_2').removeAttr('checked');
		}
	});
	$('#cc_2').change(function (){
		if ( $(this).is(':checked') == true){
			$('#ma_2').prop("checked", true);
		}
	});


	$('#gq').change(function (){
		if ( $(this).is(':checked') == false){
			$('#sqpae_, #sca2_, #daqin_').removeAttr('checked');
		}
	});
	$('#sqpae_, #sca2_, #daqin_').change(function (){
		$('#gq').prop("checked", true);
	});



	/* change text and hide appropriate divs if passmark is set */
	$('#passmarkid').keyup( function(){

		if (passmark_is_set()){
			$('#pass_link_label').text('Pass link:');
			$('#pass_feedback_label').text('Test completed message: Show on pass');
			$('#fail_link_div').show();
			$('#fail_feedback_div').show();
		} else {
			$('#fail_link_div').hide();
			$('#fail_feedback_div').hide();
			$('#pass_link_label').text('Link');
			$('#pass_feedback_label').text('Test completed message');
		}
	});
	if (passmark_is_set()){
		$('#pass_link_label').text('Pass link');
		$('#pass_feedback_label').text('Test completed message: Show on pass');
		$('#fail_link_div').show();
		$('#fail_feedback_div').show();
	} else {
		$('#fail_link_div').hide();
		$('#fail_feedback_div').hide();
		$('#pass_link_label').text('Link');
		$('#pass_feedback_label').text('Test completed message');
	}
	$(document).on('change','#certificate',function(){

		/* Note: urlArray is declared in generic.overlay.js
		 * We need to set the correct urlArray index which is used in AJAX - not the HREF on this page
		 */

		/* IE7/6 etc will not include generic.overlay.js so urlArray reference will give error */
		if ($(this).val() != 0 && typeof urlArray != 'undefined'){

			urlArray[$('#edit_certificate_link').attr('data-index')] = webpath_admin+'tests/certificates/manage/?certificate_id='+$('#certificate').val()+'&show_layover';
			$('#edit_certificate_link').show();

		} else {
			$('#edit_certificate_link').hide();
		}
	});


	$(document).on('change','#webhook',function(){

		/* Note: urlArray is declared in generic.overlay.js
		 * We need to set the correct urlArray index which is used in AJAX - not the HREF on this page
		 */

		/* IE7/6 etc will not include generic.overlay.js so urlArray reference will give error */
		if ($(this).val() != 0 && typeof urlArray != 'undefined'){

			urlArray[$('#edit_webhook_link').attr('data-index')] = webpath_admin+'myaccount/webhooks/edit/?webhook_id='+$('#webhook').val()+'&show_layover';
			$('#edit_webhook_link').show();

		} else {
			$('#edit_webhook_link').hide();
		}
	});





});


function passmark_is_set(){
	if (isNaN($('#passmarkid').val()) || $('#passmarkid').val()==0 || $('#passmarkid').val()==''){
		return false;
	} else if ($('#passmarkid').val() < 0 || $('#passmarkid').val() > 100){
		alert('Passmark must be between 0 and 100');
		$('#passmarkid').val('');
		return false;
	} else {
		return true;
	}
}
</script>